#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Параметры.Пользователь) Тогда
		Пользователь = Параметры.Пользователь;
	Иначе
		Пользователь = ПользователиКлиентСервер.ТекущийПользователь();
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Пользователь) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ВыбранныйБот = bot_ea_Боты.ПолучитьБотаПользователя(Пользователь);
	
	Если ВыбранныйБот = Неопределено Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ПроверитьНовыеСообщения();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПриОткрытииНаСервере();
	ДоступностьЭлементов();
	ЧатыАктивныеЗаполнить();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СтраницыЧатыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если ТекущаяСтраница.Имя = "СтраницаАктивныеЧаты" Тогда	
		ЧатыАктивныеЗаполнить();
		Элементы.СтраницаАктивныеЧаты.Картинка = БиблиотекаКартинок.Чаты;
	ИначеЕсли ТекущаяСтраница.Имя = "СтраницаАрхивныеЧаты" Тогда
		ЧатыАрхивныеЗаполнить();
		Элементы.СтраницаАрхивныеЧаты.Картинка = БиблиотекаКартинок.Архив;
	ИначеЕсли ТекущаяСтраница.Имя = "СтраницаЗаблокированныеЧаты" Тогда 
		ЧатыЗаблокированныеЗаполнить(); 
	ИначеЕсли ТекущаяСтраница.Имя = "СтраницаСправка" Тогда
		ПоказатьСправку();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НовоеСообщениеПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(НовоеСообщение) Тогда
		ОтправитьСообщение(НовоеСообщение);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыЧатыАктивные

&НаКлиенте
Процедура ЧатыАктивныеПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(ТекущиеДанные.Ссылка) Тогда
		ЭтаФорма.ВыбранныйЧат = ТекущиеДанные.Ссылка;
	Иначе
		ЭтаФорма.ВыбранныйЧат = ПредопределенноеЗначение("Справочник.bot_ea_Чаты.ПустаяСсылка");
	КонецЕсли;
	
	ПометитьЧатКакПрочитано();
	ЗаполнитьЧат();
	ЗапуститьОбновлениеЧата();
	ДоступностьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ЧатыАктивныеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(ТекущиеДанные.Ссылка) Тогда
		ПоказатьЗначение(, ТекущиеДанные.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыЧатыАрхивные

&НаКлиенте
Процедура ЧатыАрхивныеПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(ТекущиеДанные.Ссылка) Тогда
		ЭтаФорма.ВыбранныйЧат = ТекущиеДанные.Ссылка;
	Иначе
		ЭтаФорма.ВыбранныйЧат = ПредопределенноеЗначение("Справочник.bot_ea_Чаты.ПустаяСсылка");
	КонецЕсли;
	
	ЗаполнитьЧат();
	ЗапуститьОбновлениеЧата();
	ДоступностьЭлементов();
	ПометитьЧатКакПрочитано();

КонецПроцедуры

&НаКлиенте
Процедура ЧатыАрхивныеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(ТекущиеДанные.Ссылка) Тогда
		ПоказатьЗначение(, ТекущиеДанные.Ссылка);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти  

#Область ОбработчикиСобытийЭлементовТаблицыФормыЧатыЗаблокированные

&НаКлиенте
Процедура ЧатыЗаблокированныеПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(ТекущиеДанные.Ссылка) Тогда
		ЭтаФорма.ВыбранныйЧат = ТекущиеДанные.Ссылка;
	Иначе
		ЭтаФорма.ВыбранныйЧат = ПредопределенноеЗначение("Справочник.bot_ea_Чаты.ПустаяСсылка");
	КонецЕсли;
	
	ЗаполнитьЧат();
	ДоступностьЭлементов();
	ПометитьЧатКакПрочитано();
	
КонецПроцедуры

&НаКлиенте
Процедура ЧатыЗаблокированныеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(ТекущиеДанные.Ссылка) Тогда
		ПоказатьЗначение(, ТекущиеДанные.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЧатОтправитьСообщение(Команда)
	
	Если ЗначениеЗаполнено(НовоеСообщение) Тогда
		ОтправитьСообщение(НовоеСообщение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЧатСоздатьСобытие(Команда)
	
	ТекстСобытия	= Элементы.ЧатАктивный.ТекущиеДанные.Сообщение;
	СсылкаНаСобытие	= СоздатьСобытиеНаСервере(ВыбранныйЧат, ТекстСобытия);
	Если СсылкаНаСобытие <> Неопределено Тогда
		ПоказатьЗначение(, СсылкаНаСобытие);  
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ЧатОтправитьФайл(Команда) 
	
	ОповещениеЗавершение = Новый ОписаниеОповещения("ЧатОтправитьФайлЗавершение", ЭтотОбъект);
	НачатьПомещениеФайлаНаСервер(ОповещениеЗавершение, , , , , УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ЧатПеренаправить(Команда) 
	ПеренаправитьНаСервере(Команда.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ЧатыОбновитьАктивные(Команда)
	ЧатыАктивныеЗаполнить();
КонецПроцедуры

&НаКлиенте
Процедура ЧатыОбновитьАрхивные(Команда)
	ЧатыАрхивныеЗаполнить();
КонецПроцедуры

&НаКлиенте
Процедура ЧатыОбновитьЗаблокированные(Команда)
	ЧатыЗаблокированныеЗаполнить();
КонецПроцедуры

&НаКлиенте
Процедура ЧатыПоместитьВАрхив(Команда)
	ЧатыПоместитьВАрхивНаСервере(ВыбранныйЧат);
	ЧатыАктивныеЗаполнить();
КонецПроцедуры

&НаКлиенте
Процедура ЧатыВернутьИзАрхива(Команда)
	ЧатыВернутьИзАрхиваНаСервере(ВыбранныйЧат);
	ЧатыАрхивныеЗаполнить();
КонецПроцедуры

&НаКлиенте
Процедура ЧатыЗаблокировать(Команда)
	ЧатыЗаблокироватьНаСервере(ВыбранныйЧат);
	ЧатыАктивныеЗаполнить();
КонецПроцедуры

&НаКлиенте
Процедура ЧатыРазблокировать(Команда)
	ЧатыРазблокироватьНаСервере(ВыбранныйЧат);
	ЧатыЗаблокированныеЗаполнить();
КонецПроцедуры

&НаКлиенте
Процедура ЧатыСоздатьЧат(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Бот", ВыбранныйБот);

	ОткрытьФорму("Справочник.bot_ea_Контакты.Форма.ФормаПриглашение", ПараметрыФормы);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗапуститьОбновлениеЧата()
	ПодключитьОбработчикОжидания("ОбработчикОжиданияОбновлениеЧата", 1);
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОжиданияОбновлениеЧата()
	
	МассивАктивные = Новый Массив;
	Для Счетчик = 0 По ЧатыАктивные.Количество() - 1 Цикл
		МассивАктивные.Добавить(ЧатыАктивные[Счетчик].Ссылка);
	КонецЦикла;
	
	МассивАрхивные = Новый Массив;
	Для Счетчик = 0 По ЧатыАрхивные.Количество() - 1 Цикл
		МассивАрхивные.Добавить(ЧатыАрхивные[Счетчик].Ссылка);
	КонецЦикла;

	МассивТекущий = Новый Массив;
	МассивТекущий.Добавить(ВыбранныйЧат);
	
	Если ЕстьНовыеСообщения(МассивТекущий) Тогда
		ПометитьЧатКакПрочитано();
		ЗаполнитьЧат();
	КонецЕсли;
	
	Если ЕстьНовыеСообщения(МассивАктивные) Тогда
		ЧатыАктивныеЗаполнить();
	КонецЕсли;
	
	Если ЕстьНовыеСообщения(МассивАрхивные) Тогда
		ЧатыАрхивныеЗаполнить();
	КонецЕсли;
	
	ПроверитьНовыеСообщения();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЕстьНовыеСообщения(Знач Чаты)
	
	Результат = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НовыеСообщения.Непрочитанных КАК Непрочитанных
		|ИЗ
		|	РегистрСведений.bot_ea_НовыеСообщения КАК НовыеСообщения
		|ГДЕ
		|	ЕСТЬNULL(НовыеСообщения.Непрочитанных, 0) <> 0
		|	И НовыеСообщения.Чат В (&Чаты)";
	
	Запрос.УстановитьПараметр("Чаты", Чаты);
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	Если РезультатЗапроса.Следующий() Тогда
		Результат = Истина;
	КонецЕсли;            
	
	Возврат Результат;
		
КонецФункции

&НаСервере
Процедура ПроверитьНовыеСообщения()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НовыеСообщения.Чат КАК Чат
		|ПОМЕСТИТЬ ВТ_НовыеСообщения
		|ИЗ
		|	РегистрСведений.bot_ea_НовыеСообщения КАК НовыеСообщения
		|ГДЕ
		|	НовыеСообщения.Бот = &Бот
		|	И ЕСТЬNULL(НовыеСообщения.Непрочитанных, 0) <> 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Чаты.Архив КАК Архив
		|ИЗ
		|	ВТ_НовыеСообщения КАК ВТ_НовыеСообщения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.bot_ea_Чаты КАК Чаты
		|		ПО ВТ_НовыеСообщения.Чат = Чаты.Ссылка
		|ГДЕ
		|	НЕ Чаты.Блок";
	
	Запрос.УстановитьПараметр("Бот", ВыбранныйБот);
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	ЕстьВАктиве = Ложь;
	ЕстьВАрхиве = Ложь;
	
	Пока РезультатЗапроса.Следующий() Цикл
		Если НЕ РезультатЗапроса.Архив Тогда 
			ЕстьВАктиве = Истина;
		ИначеЕсли РезультатЗапроса.Архив Тогда 
			ЕстьВАрхиве = Истина;
		Иначе
			Продолжить;
		КонецЕсли;
	КонецЦикла; 
	
	Элементы.СтраницаАктивныеЧаты.Картинка = ?(ЕстьВАктиве, БиблиотекаКартинок.ЧатыНовое,	БиблиотекаКартинок.Чаты); 
	Элементы.СтраницаАрхивныеЧаты.Картинка = ?(ЕстьВАрхиве, БиблиотекаКартинок.АрхивНовое,	БиблиотекаКартинок.Архив);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСправку()
    ЭтаФорма.Справка = ТекстСправки(); 
КонецПроцедуры 

&НаСервереБезКонтекста
Функция ТекстСправки()
	Возврат ПолучитьОбщийМакет("bot_ea_Справка").ПолучитьТекст();
КонецФункции

&НаСервере
Процедура ПриОткрытииНаСервере()
	
	КромеБотов = Новый Массив;
	КромеБотов.Добавить(Строка(ВыбранныйБот));
	КромеБотов.Добавить("Альфа чаты");
	
	ГруппыБотов = bot_ea_Боты.НаправленияБотов();
	
	Если ЗначениеЗаполнено(ГруппыБотов) Тогда
		
		Для Каждого ГруппаБота Из ГруппыБотов Цикл
			
			НаименованиеБезПробелов = СтрЗаменить(ГруппаБота.Ключ.Наименование, " ", "");
			НаименованиеБезКовычек = СтрЗаменить(НаименованиеБезПробелов, """", "");
			НаименованиеБезТире = СтрЗаменить(НаименованиеБезКовычек, "-", "");
			ИмяКнопки = НаименованиеБезТире;
			
			ПеренаправлениеКоманда = Команды.Добавить(ИмяКнопки);
			ПеренаправлениеКоманда.Заголовок = ГруппаБота.Ключ.Наименование;
			ПеренаправлениеКоманда.Действие	= "ЧатПеренаправить";
			
			ПеренаправлениеКнопка = Элементы.Добавить(ИмяКнопки, Тип("КнопкаФормы"), Элементы.НаправитьНа);
			ПеренаправлениеКнопка.Заголовок = ГруппаБота.Значение.Наименование;
			ПеренаправлениеКнопка.ИмяКоманды = ПеренаправлениеКоманда.Имя; 
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЧат()   
	
	ЧатАктивный.Очистить();
	Для Каждого СообщениеЧата Из МассивСообщенийЧата(ВыбранныйЧат, ТекстЗапросаЧат()) Цикл
		НоваяСтрокаЧата = ЧатАктивный.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаЧата, СообщениеЧата);
		Если НЕ ЗначениеЗаполнено(НоваяСтрокаЧата.Автор) Тогда 
			РазделительПозиция = СтрНайти(НоваяСтрокаЧата.Сообщение, ":");
			КоличествоСимволов = СтрДлина(НоваяСтрокаЧата.Сообщение);
			Если РазделительПозиция > 0 Тогда
				НоваяСтрокаЧата.Автор		= Лев(НоваяСтрокаЧата.Сообщение, РазделительПозиция);
				НоваяСтрокаЧата.Сообщение	= Прав(НоваяСтрокаЧата.Сообщение, КоличествоСимволов - РазделительПозиция);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если ЧатАктивный.Количество() <> 0 Тогда
		ПоследняяСтрока = ЧатАктивный.Количество() - 1;
		Элементы.ЧатАктивный.ТекущаяСтрока = ЧатАктивный[ПоследняяСтрока].ПолучитьИдентификатор();
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция МассивСообщенийЧата(Знач ВыбранныйЧат, Знач ТекстЗапросаЧат)
	
	Результат = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаЧат;
	Запрос.УстановитьПараметр("Чат", ВыбранныйЧат);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ИсторияЧата	= РезультатЗапроса.Выгрузить();
		Результат	= ОбщегоНазначения.ТаблицаЗначенийВМассив(ИсторияЧата);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ЧатыАктивныеЗаполнить()
	
	ЧатыАктивные.Очистить();
	Для Каждого СтрокаЧата Из МассивЧатовАктивных(ВыбранныйБот, ТекстЗапросаЧаты()) Цикл
		НоваяСтрокаЧата = ЧатыАктивные.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаЧата, СтрокаЧата); 
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЧатыАрхивныеЗаполнить()
	
	ЧатыАрхивные.Очистить();
	Для Каждого СтрокаЧата Из МассивЧатовАрхивных(ВыбранныйБот, ТекстЗапросаЧаты()) Цикл
		НоваяСтрокаЧата = ЧатыАрхивные.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаЧата, СтрокаЧата); 
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЧатыЗаблокированныеЗаполнить()
	
	ЧатыЗаблокированные.Очистить();
	Для Каждого СтрокаЧата Из МассивЧатовЗаблокированных(ВыбранныйБот, ТекстЗапросаЧаты()) Цикл
		НоваяСтрокаЧата = ЧатыЗаблокированные.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаЧата, СтрокаЧата); 
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция МассивЧатовАктивных(Знач ВыбранныйБот, Знач ТекстЗапросаЧаты)
	
	Результат = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаЧаты;
	Запрос.УстановитьПараметр("Бот", ВыбранныйБот);
	Запрос.УстановитьПараметр("Архив", Ложь);
	Запрос.УстановитьПараметр("Блок", Ложь);
	Запрос.УстановитьПараметр("Родитель", Справочники.bot_ea_Контакты.ГруппаКонтактов("Клиенты"));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ЧатыАктивные	= РезультатЗапроса.Выгрузить();
		Результат		= ОбщегоНазначения.ТаблицаЗначенийВМассив(ЧатыАктивные);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция МассивЧатовАрхивных(Знач ВыбранныйБот, Знач ТекстЗапросаЧаты)
	
	Результат = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаЧаты;
	Запрос.УстановитьПараметр("Бот", ВыбранныйБот);
	Запрос.УстановитьПараметр("Архив", Истина);
	Запрос.УстановитьПараметр("Блок", Ложь);
	Запрос.УстановитьПараметр("Родитель", Справочники.bot_ea_Контакты.ГруппаКонтактов("Клиенты"));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ЧатыАрхивные	= РезультатЗапроса.Выгрузить();
		Результат		= ОбщегоНазначения.ТаблицаЗначенийВМассив(ЧатыАрхивные);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция МассивЧатовЗаблокированных(Знач ВыбранныйБот, Знач ТекстЗапросаЧаты)
	
	Результат = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаЧаты;
	Запрос.УстановитьПараметр("Бот", ВыбранныйБот);
	Запрос.УстановитьПараметр("Архив", Ложь);
	Запрос.УстановитьПараметр("Блок", Истина);
	Запрос.УстановитьПараметр("Родитель", Справочники.bot_ea_Контакты.ГруппаКонтактов("Клиенты"));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ЧатыЗаблокированные	= РезультатЗапроса.Выгрузить();
		Результат			= ОбщегоНазначения.ТаблицаЗначенийВМассив(ЧатыЗаблокированные);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция ТекстЗапросаЧат()
	
	Результат =
	"ВЫБРАТЬ
	|	ИсторияСообщений.Период КАК ДатаИВремя,
	|	ИсторияСообщений.tg_message_id КАК СообщениеИД,
	|	ИсторияСообщений.tg_text КАК Сообщение,
	|	ВЫБОР
	|		КОГДА ИсторияСообщений.tg_Вид = ЗНАЧЕНИЕ(Перечисление.bot_ea_ВидСообщения.Входящее)
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК ВидСообщения,
	|	ИсторияСообщений.tg_from КАК Контакт,
	|	ИсторияСообщений.tg_Чат КАК Чат
	|ПОМЕСТИТЬ ВТ_История
	|ИЗ
	|	РегистрСведений.bot_ea_ИсторияСообщенийТГ КАК ИсторияСообщений
	|ГДЕ
	|	ИсторияСообщений.tg_Чат = &Чат
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СообщениеИД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_История.ДатаИВремя КАК ДатаИВремя,
	|	ВТ_История.Сообщение КАК Сообщение,
	|	ВТ_История.ВидСообщения КАК ВидСообщения,
	|	ВложенныеФайлы.ПрисоединенныйФайл КАК ПрисоединенныйФайл,
	|	bot_ea_Контакты.КонтактноеЛицо КАК Автор
	|ИЗ
	|	ВТ_История КАК ВТ_История
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.bot_ea_ВложенныеФайлы КАК ВложенныеФайлы
	|		ПО ВТ_История.Чат = ВложенныеФайлы.tg_Чат
	|			И ВТ_История.СообщениеИД = ВложенныеФайлы.tg_message_id
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.bot_ea_Контакты КАК bot_ea_Контакты
	|		ПО ВТ_История.Контакт = bot_ea_Контакты.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаИВремя";
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция ТекстЗапросаЧаты()
	
	Результат =
		"ВЫБРАТЬ
		|	Чаты.Ссылка КАК Ссылка,
		|	Чаты.Контакт КАК Контакт
		|ПОМЕСТИТЬ ВТ_Чаты
		|ИЗ
		|	Справочник.bot_ea_Чаты КАК Чаты
		|ГДЕ
		|	НЕ Чаты.ПометкаУдаления
		|	И Чаты.Архив = &Архив
		|	И Чаты.Блок = &Блок
		|	И Чаты.Бот = &Бот
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Контакт
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Чаты.Ссылка КАК Ссылка,
		|	Контакты.Аватар КАК Аватар,
		|	Контакты.Контрагент КАК Контрагент,
		|	Контакты.КонтактноеЛицо КАК КонтактноеЛицо,
		|	Контакты.Родитель КАК Родитель
		|ПОМЕСТИТЬ ВТ_ЧатыСКонтактом
		|ИЗ
		|	ВТ_Чаты КАК ВТ_Чаты
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.bot_ea_Контакты КАК Контакты
		|		ПО ВТ_Чаты.Контакт = Контакты.Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТ_ЧатыСКонтактом.Ссылка КАК Ссылка,
		|	ВТ_ЧатыСКонтактом.Аватар КАК Аватар,
		|	ВТ_ЧатыСКонтактом.Контрагент КАК Контрагент,
		|	ВТ_ЧатыСКонтактом.КонтактноеЛицо КАК КонтактноеЛицо,
		|	ЕСТЬNULL(НовыеСообщения.Непрочитанных, 0) КАК НовыхСообщений,
		|	МАКСИМУМ(bot_ea_ИсторияСообщенийТГ.Период) КАК Период
		|ИЗ
		|	ВТ_ЧатыСКонтактом КАК ВТ_ЧатыСКонтактом
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.bot_ea_НовыеСообщения КАК НовыеСообщения
		|		ПО ВТ_ЧатыСКонтактом.Ссылка = НовыеСообщения.Чат
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.bot_ea_ИсторияСообщенийТГ КАК bot_ea_ИсторияСообщенийТГ
		|		ПО ВТ_ЧатыСКонтактом.Ссылка = bot_ea_ИсторияСообщенийТГ.tg_Чат
		|ГДЕ
		|	ВТ_ЧатыСКонтактом.Родитель = &Родитель
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ЧатыСКонтактом.Ссылка,
		|	ВТ_ЧатыСКонтактом.Контрагент,
		|	ВТ_ЧатыСКонтактом.КонтактноеЛицо,
		|	ВТ_ЧатыСКонтактом.Аватар,
		|	ЕСТЬNULL(НовыеСообщения.Непрочитанных, 0)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ";
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция КонтактЧата(Знач ВыбранныйЧат)
	
	Результат = Неопределено;
	
	Результат = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВыбранныйЧат, "Контакт");
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция КонтрагентЧата(Знач ВыбранныйЧат)
	
	Результат = Неопределено;
	
	Результат = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВыбранныйЧат, "Контрагент");
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция ЗаголовокЧата(ВыбранныйЧат)
	
	Результат = Неопределено;
	
	КонтактЧата = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВыбранныйЧат, "Контакт");
	РеквизитыКонтакта = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(КонтактЧата, "Контрагент, КонтактноеЛицо");
	Если РеквизитыКонтакта.Контрагент <> Неопределено Тогда
		Результат = Строка(РеквизитыКонтакта.Контрагент);
	КонецЕсли; 
	Если РеквизитыКонтакта.КонтактноеЛицо <> Неопределено Тогда
		Результат = Строка(РеквизитыКонтакта.КонтактноеЛицо) + " (" + Результат + ")";
	КонецЕсли;
	Если Результат = Неопределено Тогда
		Результат = Строка(КонтактЧата);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ДоступностьЭлементов()
	
	Если Строка(ПользователиКлиентСервер.ТекущийПользователь()) = "Администратор" Тогда
		Элементы.ВыбранныйБот.Видимость = Истина;
	Иначе
		Элементы.ВыбранныйБот.Видимость = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВыбранныйБот) И ЗначениеЗаполнено(ВыбранныйЧат) Тогда
		Элементы.ПраваяГруппа.Доступность = Истина;
	Иначе
		Элементы.ПраваяГруппа.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьСообщение(Текст)
	
	Отправлено = ОтправитьСообщениеНаСервере(ВыбранныйБот, ВыбранныйЧат, Текст, Пользователь);
	Если НЕ Отправлено Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Контакт еще не принял приглашение";
		Сообщение.Сообщить();
	Иначе
		ЭтаФорма.НовоеСообщение = "";
		ЗаполнитьЧат();
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОтправитьСообщениеНаСервере(Знач Бот, Знач Чат, Знач Текст, Знач Пользователь) 
	
	Отправлено = Истина;
	
	ЧатИД = bot_ea_Чаты.ПолучитьИДЧата(Чат);
	
	Если ЧатИД <> 0 Тогда
		
		Ответ = "<i>" + Строка(Пользователь) + ":</i>" + Символы.ПС + Текст;
		
		СтруктураОтвета				= bot_ea_Ответы.ПолучитьСтруктуруОтвета();
		СтруктураОтвета.Бот			= Бот;
		СтруктураОтвета.Чат			= Чат;
		СтруктураОтвета.ТекстОтвета	= Ответ;
		СтруктураОтвета.ТипОтвета	= "Сообщение";
		bot_ea_ОбщийМодульТелеграм.ОтправитьСообщение(СтруктураОтвета);
		
	Иначе
		Возврат НЕ Отправлено;
	КонецЕсли;
	
	Возврат Отправлено;
	
КонецФункции

&НаСервереБезКонтекста
Функция СоздатьСобытиеНаСервере(Знач ЧатСобытия, Знач ТекстСобытия) 
	
	Сценарий				= bot_ea_СценарииTelegram.СтруктураСценария();
	Сценарий.Чат			= ЧатСобытия;
	Сценарий.ТекстСообщения	= ТекстСобытия;
	
	Возврат bot_ea_Событие.СоздатьСобытие(Сценарий);
	
КонецФункции

&НаКлиенте
Процедура ПометитьЧатКакПрочитано()
	
	ТекущиеДанные = Элементы.ЧатыАктивные.ТекущиеДанные;
	ПометитьКакПрочитаноНаСервере(ВыбранныйБот, Выбранныйчат);
	Если ТекущиеДанные <> Неопределено Тогда
		Элементы.ЧатыАктивные.ТекущиеДанные.НовыхСообщений = 0;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПометитьКакПрочитаноНаСервере(Знач ВыбранныйБот, Знач Выбранныйчат)
	
	ЗаписьВРезультат				= РегистрыСведений.bot_ea_НовыеСообщения.СоздатьМенеджерЗаписи();
	ЗаписьВРезультат.Бот			= ВыбранныйБот;
	ЗаписьВРезультат.Чат			= Выбранныйчат;
	ЗаписьВРезультат.Непрочитанных	= 0;
	Попытка
		ЗаписьВРезультат.Записать(Истина);
	Исключение
		ИмяСобытия			= СтрШаблон("Сброс непрочитанных сообщений чата %1", Выбранныйчат);
		УровеньЖурнала		= УровеньЖурналаРегистрации.Ошибка;
		ПредставлениеОшибки	= ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурнала, , , ПредставлениеОшибки);
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ЧатОтправитьФайлЗавершение(ОписаниеПомещенногоФайла, ДополнительныеПараметры) Экспорт
	
	Если ОписаниеПомещенногоФайла <> Неопределено Тогда
		СведенияОФайле = 
		РаботаСФайламиКлиентСервер.СведенияОФайле("ФайлСВерсией", ОписаниеПомещенногоФайла.СсылкаНаФайл.Файл);
		СведенияОФайле.АдресВременногоХранилищаФайла = ОписаниеПомещенногоФайла.Адрес;
		ЧатОтправитьФайлЗавершениеНаСервере(ВыбранныйБот, ВыбранныйЧат, СведенияОФайле);
	КонецЕсли;
	
КонецПроцедуры 

&НаСервереБезКонтекста
Процедура ЧатОтправитьФайлЗавершениеНаСервере(Знач ВыбранныйБот, Знач ВыбранныйЧат, Знач СведенияОФайле)
	
	СсылкаНаСправочник = bot_ea_Файлы.ЗагрузитьВСправочник(СведенияОФайле);
	bot_ea_Файлы.ОтправитьВЧат(ВыбранныйБот, ВыбранныйЧат, СсылкаНаСправочник);
	
КонецПроцедуры

&НаСервере
Процедура ПеренаправитьНаСервере(Знач КомандаИмя)
	
	ТекущаяКоманда					= Команды.Найти(КомандаИмя);
	ТекущийСценарий					= bot_ea_СценарииTelegram.СтруктураСценария();
	ТекущийСценарий.Имя				= "Переадресация";
	ТекущийСценарий.Этап			= Перечисления.bot_ea_Этап.Начало;
	ТекущийСценарий.СледующийБот	= bot_ea_Боты.ПолучитьБотаПоНаименованию(ТекущаяКоманда.Заголовок);
	bot_ea_Ответы.ПолучитьТекстОтвета(ТекущийСценарий);
	СтруктураОтвета = bot_ea_Ответы.ПолучитьСтруктуруОтвета();
	СтруктураОтвета.Бот = ВыбранныйБот;
	СтруктураОтвета.Чат = ВыбранныйЧат;
	СтруктураОтвета.ТекстОтвета = ТекущийСценарий.ТекстОтвета;
	СтруктураОтвета.СледующийБот = ТекущийСценарий.СледующийБот;
	СтруктураОтвета.ТипМенюОтвета = "Переадресация";
	СтруктураОтвета.ТипОтвета = "Меню";
	bot_ea_ОбщийМодульТелеграм.ОтправитьСообщение(СтруктураОтвета);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЧатАктивныйВыборНаСервере(Знач ЧатФайл)
	Возврат bot_ea_Файлы.ПолучитьИзСправочника(ЧатФайл);
КонецФункции

&НаКлиенте
Процедура КонтактСсылкаНажатие(Элемент)
	
	Если ЗначениеЗаполнено(ВыбранныйЧат) Тогда
		КонтактЧата = КонтактЧата(ВыбранныйЧат);
		Если КонтактЧата <> Неопределено Тогда
			ОткрытьФорму("Справочник.bot_ea_Контакты.Форма.ФормаЭлемента", Новый Структура("Ключ", КонтактЧата));
		Иначе       
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Не удалось определить контакт чата";
			Сообщение.Сообщить();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущийКонтрагентНажатие(Элемент, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ВыбранныйЧат) Тогда
		КонтрагентЧата = КонтрагентЧата(ВыбранныйЧат);
		Если КонтрагентЧата <> Неопределено Тогда
			ОткрытьФорму("Справочник.bot_ea_Контакты.Форма.ФормаЭлемента", Новый Структура("Ключ", КонтрагентЧата));
		Иначе       
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Не удалось определить контакт чата";
			Сообщение.Сообщить();
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущийКонтактНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(ВыбранныйЧат) Тогда
		КонтактЧата = КонтактЧата(ВыбранныйЧат);
		Если КонтактЧата <> Неопределено Тогда
			ОткрытьФорму("Справочник.bot_ea_Контакты.Форма.ФормаЭлемента", новый Структура("Ключ", КонтактЧата));
		Иначе       
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Не удалось определить контакт чата";
			Сообщение.Сообщить();
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЧатыПоместитьВАрхивНаСервере(Знач Чат)
	
	ОбъектЧата = Чат.ПолучитьОбъект();
	ОбъектЧата.Архив	= Истина;
	ОбъектЧата.Блок		= Ложь;
	Попытка
		ОбъектЧата.Записать();
	Исключение
		ИмяСобытия			= СтрШаблон("Помещение %1 в архив", Чат);
		УровеньЖурнала		= УровеньЖурналаРегистрации.Ошибка;
		ПредставлениеОшибки	= ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурнала, , , ПредставлениеОшибки);
	КонецПопытки;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЧатыВернутьИзАрхиваНаСервере(Знач Чат)

	ОбъектЧата = Чат.ПолучитьОбъект();
	ОбъектЧата.Архив	= Ложь;
	ОбъектЧата.Блок		= Ложь;
	Попытка
		ОбъектЧата.Записать();
	Исключение
		ИмяСобытия			= СтрШаблон("Извлечение чата %1 из архива", Чат);
		УровеньЖурнала		= УровеньЖурналаРегистрации.Ошибка;
		ПредставлениеОшибки	= ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурнала, , , ПредставлениеОшибки);
	КонецПопытки;

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЧатыЗаблокироватьНаСервере(Знач Чат)
	
	ОбъектЧата = Чат.ПолучитьОбъект();
	ОбъектЧата.Архив	= Ложь;
	ОбъектЧата.Блок		= Истина;
	Попытка
		ОбъектЧата.Записать();
	Исключение
		ИмяСобытия			= СтрШаблон("Блокировка чата %1", Чат);
		УровеньЖурнала		= УровеньЖурналаРегистрации.Ошибка;
		ПредставлениеОшибки	= ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурнала, , , ПредставлениеОшибки);
	КонецПопытки; 
	
КонецПроцедуры 

&НаСервереБезКонтекста
Процедура ЧатыРазблокироватьНаСервере(Знач Чат)
	
	ОбъектЧата = Чат.ПолучитьОбъект();
	ОбъектЧата.Архив	= Ложь;
	ОбъектЧата.Блок		= Ложь;
	Попытка
		ОбъектЧата.Записать();
	Исключение
		ИмяСобытия			= СтрШаблон("Разблокировка чата %1", Выбранныйчат);
		УровеньЖурнала		= УровеньЖурналаРегистрации.Ошибка;
		ПредставлениеОшибки	= ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурнала, , , ПредставлениеОшибки);
	КонецПопытки; 
	
КонецПроцедуры

&НаКлиенте
Процедура ЧатАктивныйВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) 
	
	ПрисоединенныйФайл = Элемент.ТекущиеДанные.ПрисоединенныйФайл;
	
	Если ЗначениеЗаполнено(ПрисоединенныйФайл) Тогда
		СтандартнаяОбработка = Ложь;
		ПутьКФайлу = ЧатАктивныйВыборНаСервере(ПрисоединенныйФайл);
		Попытка
			ФайловаяСистемаКлиент.ОткрытьФайл(СокрЛП(ПутьКФайлу));	
		Исключение
			ИмяСобытия			= СтрШаблон("Открытие файла ""%1"" во внешнем приложении", ПутьКФайлу);
			УровеньЖурнала		= УровеньЖурналаРегистрации.Ошибка;
			ПредставлениеОшибки	= ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурнала, , , ПредставлениеОшибки);
		КонецПопытки;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 
